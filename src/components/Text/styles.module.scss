@use 'body.module' as *;
@use '../tokens.module';

:global(body) {
    @include body;

    background: tokens.$surface_auxiliary_backgroundColor;
    color: tokens.$surface_auxiliary_foregroundColor;
}

.text {
    @include body;

    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0;
    max-width: 60ch;
    overflow-wrap: break-word;

    &:not([data-standby="true"]):empty {
        display: none;
    }

    &:where(hr), :where(hr) {
        border: revert;
    }

    &:where(a), :where(a) {
        color: inherit;
    }

    &:where(strong, label, th) {
        font-weight: bolder;
    }

    &:where(label[for]) {
        cursor: pointer;
    }

    &:where(ul) {
        padding: revert;
    }

    &:where([data-priority="primary"]) {
        text-wrap: balance;
        font-family: tokens.$text_primary_fontFamily;
        font-weight: tokens.$text_primary_fontWeight;
        --fontminrem: #{$primary-rem};
        font-size: clamp(
            var(--fontminrem) * 1rem,
            var(--slope) * 100vw,
            var(--fontmaxrem) * 1rem
        );
        line-height: tokens.$text_primary_lineHeight;
        color: tokens.$surface_primary_foregroundColor;
    }

    &:where([data-priority="auxiliary"]) {
        --fontminrem: #{$auxiliary-rem};
        font-family: tokens.$text_auxiliary_fontFamily;
        font-weight: tokens.$text_auxiliary_fontWeight;
        line-height: tokens.$text_auxiliary_lineHeight;
        color: tokens.$surface_auxiliary_foregroundColor;
    }

    & > .text:not([data-priority]) {
        font: inherit;
    }
}

.sronly:not(:focus):not(:active) {
    position: absolute;
    transform: scale(0);
}