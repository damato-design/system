.text:is(.text) {
    font-size: 1rem;
    text-wrap: pretty;

    &:is(strong) {
        font-weight: bolder;
    }

    &:is(label[for]) {
        cursor: pointer;
    }

    &:empty {
        display: none;
    }

    &:is([data-priority="primary"]) {
        /* text-wrap: balance; */
        font-weight: bolder;
        font-size: 1.2rem;
        &:not(label) {
            font-size: 1.8rem;
            line-height: 1.1;
        }
    }

    &:is([data-priority="secondary"]) {
        font-size: 1.2rem;
    }
    
    &:where([data-standby="true"]) {
        /* These will need to be intents triggered by mode */
        --skeleton-bg: #ededed;
        --skeleton-shine: black;
        min-height: 1lh;
        min-width: 1lh;
        color: transparent;
        
        background-color: var(--skeleton-bg);
        background-image: linear-gradient(
            100deg,
            transparent 40%,
            color-mix(in srgb, var(--skeleton-shine), transparent 50%) 50%,
            transparent 60%
        );
        background-size: 200% 100%;
        background-position-x: 120%;

        @media (prefers-reduced-motion: no-preference) {
            background-position-x: 180%;
		    animation: 2s loading ease-in-out infinite;
        }
    }
}

.sronly {
    &:not(:focus):not(:active) {
        clip: rect(0 0 0 0); 
        clip-path: inset(50%);
        height: 1px;
        overflow: hidden;
        position: absolute;
        white-space: nowrap; 
        width: 1px;
    }
}

@keyframes loading {
	to { background-position-x: -20% }
}