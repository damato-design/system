.box {
    min-width: 0;
    font-size: 1.2rem;
    &.round:is(.round) {
        border-radius: 100vw;
    }

    &.prose:is(.prose) > * + * {
        margin-block-start: var(--gap, .5rem);
    }
}

.surface:is(.surface) {
    background: black;
    border-radius: 8px;
    overflow: clip;

    &:is([data-priority="primary"]) {
        box-shadow: 0 2px 4px black;
    }

    &:is([data-priority="secondary"]) {
        background: black;
        box-shadow: 0 2px 4px black;
    }
}

.action:is(.action) {
    cursor: pointer;
    font-size: 1.2rem;
    border-radius: 4px;
    border: 1px solid transparent;

    --bgColor: #111;
    background-color: color-mix(in srgb, var(--bgColor), currentColor 10%);
    transition: background .218s ease;

    & > * {
        pointer-events: none;
    }

    & > strong {
        padding-inline: var(--padding, 1rem);
        margin-inline: calc(var(--padding, 1rem) / -2);
    }

    &:is([data-priority="primary"]) {
        --bgColor: blue;
    }

    &:is([data-priority="secondary"]) {
        --bgColor: green;
    }

    &[disabled] {
        cursor: not-allowed;
        opacity: .4;
    }

    /* inline links */
    &:not([style*="padding"]) span {
        font: inherit;
        padding: 0;
    }

    /* padded buttons */
    &:not([disabled]):where([style*="padding"]):hover {
        background-color: color-mix(in srgb, var(--bgColor), currentColor 15%);
    }

    /* non-padded buttons (inline links) */
    &:not([disabled]):not([style*="padding"]):hover {
        text-decoration-color: color-mix(in srgb, var(--bgColor), currentColor 25%);
    }
}

.control:is(.control) {
    border: 1px solid;
    border-radius: 4px;
    font-size: 1.2rem;

    > hr {
        height: 1lh;
    }

    > [data-icon] {
        padding-inline: var(--padding, 1rem);
    }
}